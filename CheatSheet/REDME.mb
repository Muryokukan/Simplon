SELECT * FROM movies
WHERE year NOT BETWEEN 2000 AND 2010;

SELECT * FROM movies
WHERE year 
LIMIT 5;

SELECT * FROM movies
WHERE Title LIKE "Toy Story%%";

SELECT title, director FROM movies
WHERE director NOT LIKE "John Lasseter";

SELECT * FROM movies
WHERE Title LIKE "WALL-%";

SELECT DISTINCT director FROM movies ORDER BY director ASC;

SELECT DISTINCT * FROM movies ORDER BY title ASC LIMIT 5;

SELECT DISTINCT * FROM movies ORDER BY title ASC LIMIT 5 OFFSET 5; 
// OFFSET pour choisir d'ignorer les x premier

SELECT City, Population FROM north_american_cities 
WHERE Country = "Canada";

SELECT City, latitude FROM north_american_cities 
WHERE Country = "United States"
ORDER BY latitude ASC;

SELECT city, longitude FROM north_american_cities
WHERE longitude < -87.629798
ORDER BY longitude ASC;

SELECT * FROM north_american_cities 
WHERE Country = "Mexico"
ORDER BY population DESC
LIMIT 2;

// ----------------------------------------------------------------------------
// JOIN PART

SELECT title, domestic_sales, international_sales 
FROM movies
  JOIN boxoffice
    ON movies.id = boxoffice.movie_id;



SELECT DISTINCT building_name
FROM buildings 
  LEFT JOIN employees
    ON building_name = building
WHERE role IS NULL;

SELECT MAX(Employees.Years_employed) AS longest_time
FROM Employees;

SELECT role, COUNT(*) as Number_of_artists // COUNT(*) pour additionner
FROM employees
WHERE role = "Artist";

SELECT role, COUNT(*) // Les roles et les nombres
FROM employees GROUP BY role; // Groupez par role

SELECT role, SUM(years_employed) // Additionner par role
FROM employees GROUP BY role HAVING role = "Engineer"; // Groupez par role, qui on le role 
